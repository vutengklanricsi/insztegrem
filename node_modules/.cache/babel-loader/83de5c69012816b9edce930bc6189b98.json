{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref().child(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on(\"state_changed\", snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, error => {\n      setError(error); // }, async () => {\n      //   const url = await storageRef.getDownloadURL();\n      //   collectionRef.add({url: url, createdAt: timestamp});\n      //   setUrl(url);\n      // }\n    }, () => {\n      // Upload completed successfully, now we can get the download URL\n      const url = storageRef.getDownloadURL().then(function (downloadURL) {\n        console.log('File available at', downloadURL);\n        collectionRef.add({\n          url: url,\n          createdAt: timestamp\n        });\n        setUrl(url);\n      });\n    });\n  }, [file]);\n  return {\n    progress,\n    error,\n    url\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/home/richard/coding/react/insztegrem/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","child","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","console","log","add","createdAt"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,oBAA5D;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,GAAqBC,KAArB,CAA2BT,IAAI,CAACU,IAAhC,CAAnB;AACA,UAAMC,aAAa,GAAGd,gBAAgB,CAACe,UAAjB,CAA4B,QAA5B,CAAtB;AAEAL,IAAAA,UAAU,CAACM,GAAX,CAAeb,IAAf,EAAqBc,EAArB,CAAwB,eAAxB,EAAyCC,IAAD,IAAU;AAChD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAhB,MAAAA,WAAW,CAACc,UAAD,CAAX;AACC,KAHH,EAGMb,KAAD,IAAW;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR,CADY,CAEd;AACA;AACA;AACA;AACA;AACC,KAVH,EAUK,MAAM;AACP;AACC,YAAME,GAAG,GAAGE,UAAU,CAACY,cAAX,GAA4BC,IAA5B,CAAiC,UAASC,WAAT,EAAsB;AAClEC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,WAAjC;AACFV,QAAAA,aAAa,CAACa,GAAd,CAAkB;AAACnB,UAAAA,GAAG,EAAEA,GAAN;AAAWoB,UAAAA,SAAS,EAAE3B;AAAtB,SAAlB;AACEQ,QAAAA,MAAM,CAACD,GAAD,CAAN;AACD,OAJY,CAAZ;AAKF,KAjBH;AAmBD,GAvBQ,EAuBN,CAACL,IAAD,CAvBM,CAAT;AAwBA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA9BD;;AAgCA,eAAeN,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref().child(file.name);\n    const collectionRef = projectFirestore.collection('images')\n\n    storageRef.put(file).on(\"state_changed\",(snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n      }, (error) => {\n        setError(error);\n      // }, async () => {\n      //   const url = await storageRef.getDownloadURL();\n      //   collectionRef.add({url: url, createdAt: timestamp});\n      //   setUrl(url);\n      // }\n      }, () => {\n        // Upload completed successfully, now we can get the download URL\n         const url = storageRef.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n        collectionRef.add({url: url, createdAt: timestamp});\n          setUrl(url);\n        });\n      }\n    );\n  }, [file]);\n  return { progress, error, url };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}