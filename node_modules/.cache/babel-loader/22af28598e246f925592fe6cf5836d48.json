{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n// const useStorage = (file) => {\n//   const [progress, setProgress] = useState(0);\n//   const [error, setError] = useState(null);\n//   const [url, setUrl] = useState(null);\n//   useEffect(() => {\n//     const storageRef = projectStorage.ref(file.name);\n//     const collectionRef = projectFirestore.collection('images')\n//     storageRef.put(file).on(\"state_changed\",(snap) => {\n//       let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n//       setProgress(percentage);\n//       }, (error) => {\n//         setError(error);\n//       }, async () => {\n//         const url = await storageRef.getDownloadURL();\n//         collectionRef.add({url: url, createdAt: timestamp});\n//         setUrl(url);\n//       }\n//       // }, () => {\n//       //   // Upload completed successfully, now we can get the download URL\n//       //    const url = storageRef.getDownloadURL().then(function(downloadURL) {\n//       //     console.log('File available at', downloadURL);\n//       //     setUrl(url);\n//       //   });\n//       // }\n//     );\n//   }, [file]);\n//   return { progress, error, url };\n// };\n// export default useStorage;\nrcfa;","map":{"version":3,"sources":["/home/richard/coding/react/insztegrem/src/hooks/useStorage.js"],"names":["rcfa"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEAA,IAAI","sourcesContent":["// import { useState, useEffect } from \"react\";\n// import { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\n// const useStorage = (file) => {\n//   const [progress, setProgress] = useState(0);\n//   const [error, setError] = useState(null);\n//   const [url, setUrl] = useState(null);\n\n//   useEffect(() => {\n//     const storageRef = projectStorage.ref(file.name);\n//     const collectionRef = projectFirestore.collection('images')\n\n//     storageRef.put(file).on(\"state_changed\",(snap) => {\n//       let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n//       setProgress(percentage);\n//       }, (error) => {\n//         setError(error);\n//       }, async () => {\n//         const url = await storageRef.getDownloadURL();\n//         collectionRef.add({url: url, createdAt: timestamp});\n//         setUrl(url);\n//       }\n//       // }, () => {\n//       //   // Upload completed successfully, now we can get the download URL\n//       //    const url = storageRef.getDownloadURL().then(function(downloadURL) {\n//       //     console.log('File available at', downloadURL);\n//       //     setUrl(url);\n//       //   });\n//       // }\n//     );\n//   }, [file]);\n//   return { progress, error, url };\n// };\n\n// export default useStorage;\n\nrcfa"]},"metadata":{},"sourceType":"module"}