{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref().child(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.on(prj.TaskEvent.STATE_CHANGED, // storageRef.put(file).on(\"state_changed\",(snap) => {\n    //   let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n    //   setProgress(percentage);\n    //   }, (error) => {\n    //     setError(error);\n    // }, async () => {\n    //   const url = await storageRef.getDownloadURL();\n    //   collectionRef.add({url: url, createdAt: timestamp});\n    //   setUrl(url);\n    // }\n    () => {\n      // Upload completed successfully, now we can get the download URL\n      const url = storageRef.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        console.log('File available at', downloadURL);\n      });\n      collectionRef.add({\n        url: url,\n        createdAt: timestamp\n      });\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    error,\n    url\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/home/richard/coding/react/insztegrem/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","child","name","collectionRef","collection","on","prj","TaskEvent","STATE_CHANGED","snapshot","getDownloadURL","then","downloadURL","console","log","add","createdAt"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,EAA2CC,SAA3C,QAA4D,oBAA5D;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACW,GAAD,EAAMC,MAAN,IAAgBZ,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAGX,cAAc,CAACY,GAAf,GAAqBC,KAArB,CAA2BT,IAAI,CAACU,IAAhC,CAAnB;AACA,UAAMC,aAAa,GAAGd,gBAAgB,CAACe,UAAjB,CAA4B,QAA5B,CAAtB;AAEAL,IAAAA,UAAU,CAACM,EAAX,CAAcC,GAAG,CAACC,SAAJ,CAAcC,aAA5B,EAEA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACC,UAAM;AACL;AACC,YAAMX,GAAG,GAAGE,UAAU,CAACU,QAAX,CAAoBT,GAApB,CAAwBU,cAAxB,GAAyCC,IAAzC,CAA8C,UAASC,WAAT,EAAsB;AAC/EC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,WAAjC;AACD,OAFY,CAAZ;AAGDT,MAAAA,aAAa,CAACY,GAAd,CAAkB;AAAClB,QAAAA,GAAG,EAAEA,GAAN;AAAWmB,QAAAA,SAAS,EAAE1B;AAAtB,OAAlB;AACAQ,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KAnBH;AAqBD,GAzBQ,EAyBN,CAACL,IAAD,CAzBM,CAAT;AA0BA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CAhCD;;AAkCA,eAAeN,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore, timestamp } from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref().child(file.name);\n    const collectionRef = projectFirestore.collection('images')\n\n    storageRef.on(prj.TaskEvent.STATE_CHANGED,\n      \n    // storageRef.put(file).on(\"state_changed\",(snap) => {\n    //   let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n    //   setProgress(percentage);\n    //   }, (error) => {\n    //     setError(error);\n      // }, async () => {\n      //   const url = await storageRef.getDownloadURL();\n      //   collectionRef.add({url: url, createdAt: timestamp});\n      //   setUrl(url);\n      // }\n       () => {\n        // Upload completed successfully, now we can get the download URL\n         const url = storageRef.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n        });\n        collectionRef.add({url: url, createdAt: timestamp});\n        setUrl(url);\n      }\n    );\n  }, [file]);\n  return { progress, error, url };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}