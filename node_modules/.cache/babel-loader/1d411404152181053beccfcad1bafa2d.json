{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n    storageRef.put(file).on(\"state_changed\", snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, error => {\n      setError(error);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      collectionRef.add({\n        url: url,\n        createdAt: createdAt\n      });\n      setUrl(url);\n    } // }, () => {\n    //   // Upload completed successfully, now we can get the download URL\n    //    const url = storageRef.getDownloadURL().then(function(downloadURL) {\n    //     console.log('File available at', downloadURL);\n    //     setUrl(url);\n    //   });\n    // }\n    );\n  }, [file]);\n  return {\n    progress,\n    error,\n    url\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["/home/richard/coding/react/insztegrem/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","getDownloadURL","add","createdAt"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,UAAU,GAAGV,cAAc,CAACW,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACA,UAAMC,aAAa,GAAGZ,gBAAgB,CAACa,UAAjB,CAA4B,QAA5B,CAAtB;AAEAJ,IAAAA,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,eAAxB,EAAyCC,IAAD,IAAU;AAChD,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAf,MAAAA,WAAW,CAACa,UAAD,CAAX;AACC,KAHH,EAGMZ,KAAD,IAAW;AACZC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KALH,EAKK,YAAY;AACb,YAAME,GAAG,GAAG,MAAME,UAAU,CAACW,cAAX,EAAlB;AACAR,MAAAA,aAAa,CAACS,GAAd,CAAkB;AAACd,QAAAA,GAAG,EAAEA,GAAN;AAAWe,QAAAA,SAAS,EAAEA;AAAtB,OAAlB;AACAd,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD,KATH,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AAhBF;AAkBD,GAtBQ,EAsBN,CAACL,IAAD,CAtBM,CAAT;AAuBA,SAAO;AAAEC,IAAAA,QAAF;AAAYE,IAAAA,KAAZ;AAAmBE,IAAAA;AAAnB,GAAP;AACD,CA7BD;;AA+BA,eAAeN,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { projectStorage, projectFirestore } from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images')\n\n    storageRef.put(file).on(\"state_changed\",(snap) => {\n      let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n      setProgress(percentage);\n      }, (error) => {\n        setError(error);\n      }, async () => {\n        const url = await storageRef.getDownloadURL();\n        collectionRef.add({url: url, createdAt: createdAt});\n        setUrl(url);\n      }\n      // }, () => {\n      //   // Upload completed successfully, now we can get the download URL\n      //    const url = storageRef.getDownloadURL().then(function(downloadURL) {\n      //     console.log('File available at', downloadURL);\n      //     setUrl(url);\n      //   });\n      // }\n    );\n  }, [file]);\n  return { progress, error, url };\n};\n\nexport default useStorage;\n"]},"metadata":{},"sourceType":"module"}